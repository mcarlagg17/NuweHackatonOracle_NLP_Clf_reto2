model;params_tried;best_params;ACC;Precision;Recall;F1;ROC;Jaccard;model_path
LogisticRegression;{'penalty': ['l2'], 'class_weight': ['none', 'balanced'], 'solver': ['newton-cg', 'liblinear', 'sag', 'saga'], 'max_iter': [50, 75, 100]};{'class_weight': 'none', 'max_iter': 50, 'penalty': 'l2', 'solver': 'newton-cg'};0.7764900662251656;0.7840670859538784;0.9211822660098522;0.8471121177802944;0.700490122903916;0.7347740667976425;model/LogisticRegression.pkl
KNeighborsClassifier;{'n_neighbors': [3, 5, 7, 9, 11, 13, 15], 'weights': ['uniform', 'distance'], 'algorithm': ['ball_tree', 'kd_tree', 'brute', 'auto'], 'leaf_size': [20, 30, 40], 'p': [1, 2]};{'algorithm': 'ball_tree', 'leaf_size': 20, 'n_neighbors': 15, 'p': 2, 'weights': 'distance'};0.7400662251655629;0.7417475728155339;0.9408866995073891;0.8295331161780674;0.6345847638951088;0.7087198515769945;model/KNeighborsClassifier.pkl
DecisionTreeClassifier;{'criterion': ['log_loss', 'gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [7, 9, 11, 13, None], 'max_features': ['log2', 'sqrt', 'auto'], 'class_weight': [None, 'balanced']};{'class_weight': 'balanced', 'criterion': 'log_loss', 'max_depth': None, 'max_features': 'sqrt', 'splitter': 'best'};0.652317880794702;0.75;0.7241379310344828;0.736842105263158;0.6145942180424938;0.5833333333333334;model/DecisionTreeClassifier.pkl
ExtraTreeClassifier;{'criterion': ['gini', 'entropy'], 'max_depth': [7, 9, 11, 13, None], 'max_features': ['log2', 'sqrt', None], 'class_weight': [None, 'balanced'], 'max_leaf_nodes': [None, 3, 7, 11]};{'class_weight': None, 'criterion': 'gini', 'max_depth': 13, 'max_features': None, 'max_leaf_nodes': None};0.6655629139072847;0.6746575342465754;0.9704433497536946;0.7959595959595959;0.5054236950788675;0.6610738255033557;model/ExtraTreeClassifier.pkl
XGBClassifier;{'nthread': [4], 'objective': ['binary:logistic'], 'learning_rate': [0.05], 'max_depth': [4, 5, 6, 7], 'min_child_weight': [1, 5, 10, 11], 'subsample': [0.6, 0.8, 1.0], 'colsample_bytree': [0.6, 0.7, 1.0], 'n_estimators': [5, 50, 100], 'missing': [-999], 'seed': [1337]};{'colsample_bytree': 1.0, 'learning_rate': 0.05, 'max_depth': 7, 'min_child_weight': 1, 'missing': -999, 'n_estimators': 100, 'nthread': 4, 'objective': 'binary:logistic', 'seed': 1337, 'subsample': 0.8};0.7649006622516556;0.7608695652173914;0.9482758620689655;0.8442982456140352;0.6685823754789272;0.7305502846299811;model/XGBClassifier.pkl
SVC;[{'C': [1, 10, 100, 1000], 'kernel': ['linear'], 'class_weight': [None, 'balanced']}, {'C': [1, 10, 100, 1000], 'kernel': ['rbf'], 'class_weight': [None, 'balanced']}];{'C': 1, 'class_weight': 'balanced', 'kernel': 'rbf'};0.7880794701986755;0.8545918367346939;0.8251231527093597;0.8395989974937343;0.7686221824152859;0.7235421166306696;model/SVC.pkl
LogisticRegression;{'penalty': ['l1', 'l2'], 'C': [0.01, 0.1, 1, 10], 'solver': ['liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga'], 'max_iter': [100, 500, 1000]};{'C': 0.01, 'max_iter': 100, 'penalty': 'l1', 'solver': 'liblinear'};0.6721854304635762;0.6721854304635762;1.0;0.803960396039604;0.5;0.6721854304635762;model/LogisticRegression_1.pkl
LogisticRegression;{'penalty': ['l1', 'l2'], 'C': [0.01, 0.1, 1, 10], 'solver': ['liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga'], 'max_iter': [100, 500, 1000]};{'C': 0.01, 'max_iter': 100, 'penalty': 'l1', 'solver': 'liblinear'};0.6721854304635762;0.6721854304635762;1.0;0.803960396039604;0.5;0.6721854304635762;model/LogisticRegression_2.pkl
